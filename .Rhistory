!file.exists(reqPage)
closePage()
detach("package:JsRCom", unload=TRUE)
install()
openPage()
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.min.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("var sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
library( JsRCom )
openPage()
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.min.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("var sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.min.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("var sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
execute("console.log(lc)")
execute("console.log(sc)")
execute("var sc = lc.scatter()")
execute("console.log(sc)")
execute("sc = lc.scatter()")
execute("console.log(sc)")
execute("sc.place()")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
execute("d3.select('body').append('svg').append('circle').attr('cx', 9).attr('cy', 9).attr('r', 5)")
closePage()
#load linked charts from a local file
openPage(useViewer = F)
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.min.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
closePage()
#load linked charts from a local file
openPage()
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.min.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
console.log(lc)
execute("/lc/linked-charts.min.js")
execute("console.log(lc)")
closePage()
#load linked charts from a local file
openPage(localDirectory = "inst/http_root")
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
closePage()
openPage(localDirectory = "inst/http_root")
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
closePage()
openPage(localDirectory = "inst/http_root")
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
closePage()
#load linked charts from a local file
openPage(localDirectory = "inst/http_root")
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
closePage()
#load linked charts from a local file
openPage(localDirectory = "inst/http_root")
selPoint <- -1
sendData("x", x)
sendData("y", y)
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lc/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
execute("console.log(lc)")
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute("console.log(lc)")
handle_http_request <- function( req ) {
reqPage <- req$PATH_INFO
print(reqPage)
if(reqPage == "/index.html" & !is.null(pageobj$startFilePath)) {
reqPage <- pageobj$startFilePath
} else {
reqPage <- str_c(pageobj$localDirectory, reqPage)
}
if( !file.exists(reqPage) ) {
reqPage <- str_remove(reqPage, pageobj$localDirectory)
if(!file.exists(reqPage)) {
warning(str_interp("File '${reqPage}' is not found"))
return( list(
status = 404L,
headers = list( "Content-Type" = "text/html" ),
body = "404: Resource not found" ) )
}
}
file_extension = str_extract( reqPage, "(?<=\\.)[^\\.]*$" )
if( file_extension == "html" )
content_type <- "text/html"
else if( file_extension == "js" )
content_type <- "text/javascript"
else if( file_extension == "css" )
content_type <- "text/css"
else {
content_type <- "text";
print( reqPage )
warning( "Serving file of unknown content type (neither .html nor .js nor .css)." )
}
content <- readLines(reqPage, warn = F)
print(str_c("Reading ", reqPage))
if(file_extension == "html") {
jsfile <- system.file( "http_root/JsRCom.js", package="JsRCom" )
jsfile <- str_c("<script src='", jsfile, "'></script>")
stop <- F
for(i in 1:length(content))
if(str_detect(content[i], regex("<head", ignore_case = T))) {
stop <- T
content[i] <- str_replace(content[i], regex("(<head[^>]*>)", ignore_case = T), str_c("\\1", jsfile))
}
#the document has no <head> tag
if(!stop) {
jsfile <- str_c("<head>", jsfile, "</head>")
for(i in 1:length(content))
if(str_detect(content[i], regex("<html", ignore_case = T))) {
stop <- T
content[i] <- str_replace(content[i], regex("(<html[^>]*>)", ignore_case = T), str_c("\\1", jsfile))
}
}
if(!stop)
content <- c(jsfile, content)
}
list(
status = 200L,
headers = list( 'Content-Type' = content_type ),
body = str_c( content, collapse="\n" )
)
}
#opens a new html page
#file - a path to html file to open. Can be relative to the locaclDirectory, relative to the current
#working R directory or absolute.
#localDirectory -
#useViewer - if TRUE, opens the page in RStudio Viewer. If FALSE, opens it in th default browser
openPage <- function(useViewer = T, localDirectory = NULL, file = NULL) {
closePage()
if(is.null(localDirectory))
localDirectory = system.file("http_root", package = "JsRCom")
if(is.null(file))
file <- system.file( "http_root/index.html", package="JsRCom" )
if(!dir.exists(localDirectory))
stop(str_interp("There is no such directory: '${localDirectory}'"))
pageobj$localDirectory <- normalizePath(localDirectory)
if(file.exists(file.path(pageobj$localDirectory, file))){
pageobj$startFile <- file
} else {
if(!file.exists(file))
stop(str_interp("There is no such file: '${file}'"))
file <- normalizePath(file)
if(grepl(file, pageobj$localDirectory)) {
pageobj$startFile <- str_remove(file, str_c(pageobj$localDirectory, "/"))
} else {
pageobj$startFile <- "index.html"
pageobj$startFilePath <- file
}
}
pageobj$app <- list(
call = handle_http_request,
onWSOpen = handle_websocket_open )
port <- 20001
stop <- F
while(!stop) {
tryCatch({
stop <- T
pageobj$httpuv_handle <- startDaemonizedServer( "0.0.0.0", port, pageobj$app )
}, error = function(e) {
port <<- port + 1
stop <<- F
if(port > 20100){
stop <<- T
stop(e$message)
}
})
}
if( useViewer & !is.null( getOption("viewer") ) )
getOption("viewer")( str_c("http://localhost:", port, "/", pageobj$startFile) )
else
browseURL( str_c("http://localhost:", port, "/", pageobj$startFile) )
# Wait up to 5 seconds for the a websocket connection
# incoming from the client
for( i in 1:(5/0.05) ) {
run_now()
if( !is.null(pageobj$websocket) ){
break
}
Sys.sleep( .05 )
}
if( is.null(pageobj$websocket) ) {
closePage()
stop( "Timeout waiting for websocket." )
}
invisible(TRUE)
}
source('~/Work/Git/JsRCom/R/jrc.R', echo=TRUE)
library(httpuv)
pageobj
ls(pageobj)
?ls
JsRCom:::pageobj
JsRCom:::pageobj$localDirectory
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
closePage()
#load linked charts from a local file
openPage(localDirectory = "inst/http_root")
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
rm(openPage())
rm(openPage)
#load linked charts from a local file
openPage(localDirectory = "inst/http_root")
execute(str_c("script = document.createElement('script');",
"script.src = 'lc/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
closePage()
?reload
reload()
#load linked charts from a local file
openPage(localDirectory = "~/Work/Git/linked-charts/build")
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = '../lib/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
execute("d3.select('body').append('svg').append('circle').attr('cx', 9).attr('cy', 9).attr('r', 5)")
execute("d3.select('circle').attr('fill', 'red')")
execute("d3.select('circle').attr('r', 10)")
execute("console.log(d3.select('circle').node())")
execute("d3.select('body').append('svg').append('circle').attr('cx', 9).attr('cy', 9).attr('r', 5)")
execute(str_c("script = document.createElement('script');",
"script.src = 'linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute("d3.select('body').append('svg').append('circle').attr('cx', 9).attr('cy', 9).attr('r', 5)")
execute("console.log(d3.select('circle').node())")
execute("d3.select('circle').attr('r', 10)")
execute("console.log(d3.select('circle').node())")
execute("console.log(d3.select('circle').attr('r'))")
execute("console.log(d3.select('circle').attr('fill'))")
execute(str_c("script = document.createElement('script');",
"script.src = 'linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
closePage()
#load linked charts from a local file
openPage(localDirectory = "~/Work/Git/linked-charts/")
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'build/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'build/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lib/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
closePage()
openPage(useView = F, localDirectory = "~/Work/Git/linked-charts/")
x <- seq(0, 5, length.out = 100)
y <- sin(x) + rnorm(n = 100, sd = 0.2)
sendData("x", x)
sendData("y", y)
selPoint <- -1
execute(str_c("script = document.createElement('script');",
"script.src = 'build/linked-charts.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("script = document.createElement('script');",
"script.src = 'build/additional.js';",
"document.head.appendChild(script);", collapse = "\n"))
execute(str_c("link = document.createElement('link');",
"link.rel = 'stylesheet';",
"link.href = 'lib/linked-charts.css';",
"document.head.appendChild(link);", collapse = "\n"))
execute("selPoint = -1")
execute(str_c("sc = lc.scatter()",
".x(function(k) {return x[k]})",
".y(function(k) {return y[k]})",
".colour(function(k) {return k == selPoint ? 'red' : 'black';})",
".on_click(function(k) {selPoint = k; ws.send('selPoint <<- ' + k); ws.send('print(selPoint)'); sc.update()})",
".place()", collapse = "\n"))
install.packages("roxygen2")
library(roxygen2)
roxygenise()
roxygenise()
roxygenise()
?fromJSON
?assign
reload()
?openPage
library( JsRCom )
?openPage
detach("package:JsRCom", unload=TRUE)
install()
library( JsRCom )
?openPage
roxygenise()
?closePage
roxygenise()
roxygenise()
roxygenise()
roxygenise()
detach("package:JsRCom", unload=TRUE)
install()
library( JsRCom )
?closePage
install()
library( JsRCom )
